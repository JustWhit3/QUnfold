# Main tox env
[tox]
requires =
    tox>=4
env_list = tests, example, analysis, processing, paper

# Base tox configuration
[testenv]
description = base env information
deps =
    -r requirements.txt
    -e src/
commands =
    black --line-length 100 {posargs:.}
setenv =
    PYTHONPATH = src:{env:PYTHONPATH}

# Run tests configuration
[testenv:tests]
description = run unit tests
deps =
    {[testenv]deps}
commands =
    {[testenv]commands}
    pytest -v tests/
setenv =
    PYTHONPATH = HEP_deps/root/lib:{env:PYTHONPATH}

# Run example configuration
[testenv:example]
description = run example script
deps =
    {[testenv]deps}
commands =
    {[testenv]commands}
    python examples/simneal_script.py

# Run analysis configuration
[testenv:analysis]
description = run analysis code
deps =
    {[testenv]deps}
commands =
    {[testenv]commands}
    python studies/analysis.py

# Run processing configuration
[testenv:processing]
description = run processing part
deps =
    {[testenv]deps}
commands =
    {[testenv]commands}
    python studies/processing.py \
    --reco="data/simulated/input/reco_ATLAS.root" \
    --particle="data/simulated/input/particle_ATLAS.root" \
    --reco-response="data/simulated/input/reco_ATLAS_response.root" \
    --particle-response="data/simulated/input/particle_ATLAS_response.root" \
    --output="data/simulated/output/unfolding_input.root" \
    --normalize-response="yes"

# Run paper configuration
[testenv:paper]
description = run paper code
deps =
    {[testenv]deps}
commands =
    {[testenv]commands}
    python studies/paper.py